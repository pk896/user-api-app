<!-- views/demands/my-demands.ejs -->
<section class="dashboard-home">
  <h1 class="page-title">üìã My Demands</h1>

  <% if (error && error.length) { %>
    <div class="flash flash-error">‚ùå <%= error %></div>
  <% } %>

  <% if (success && success.length) { %>
    <div class="flash flash-success">‚úÖ <%= success %></div>
  <% } %>

  <!-- KPI Cards -->
  <div class="kpi-grid">
    <div class="kpi-card">
      <div class="kpi-label">Total Requests</div>
      <div class="kpi-value" id="kpiTotalRequests">0</div>
    </div>
    <div class="kpi-card">
      <div class="kpi-label">Unique Product Names</div>
      <div class="kpi-value" id="kpiUniqueNames">0</div>
    </div>
    <div class="kpi-card">
      <div class="kpi-label">Total Quantity</div>
      <div class="kpi-value" id="kpiTotalQty">0</div>
    </div>
  </div>

  <!-- Filters -->
  <div class="filters">
    <input id="searchName" type="search" placeholder="üîé Search by product name..." />
    <select id="filterType">
      <option value="">All Types</option>
    </select>
    <select id="filterStatus">
      <option value="">All Statuses</option>
    </select>
    <button id="clearFilters" class="btn btn-secondary">Clear</button>
    <a class="btn btn-primary" href="/demands/add" style="margin-left:auto;">‚ûï New Demand</a>
  </div>

  <% if (demands && demands.length) { %>
    <table class="nice-table" id="tableMyDemands" style="margin-top:.6rem;">
      <thead>
        <tr>
          <th>Requester</th>
          <th>Type</th>
          <th>Product</th>
          <th>Qty</th>
          <th>Location</th>
          <th>Notes</th>
          <th>Status</th>
          <th>Created</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% demands.forEach(function(d){ 
             const nm  = (d.productName || '').trim();
             const typ = (d.type || d.productType || '').trim();
             const status = (d.status || 'Open').trim();
             const locParts = [d.country, d.province, d.city, d.town].filter(Boolean);
        %>
          <tr class="row-demand"
              data-id="<%= d._id %>"
              data-name="<%= nm.toLowerCase() %>"
              data-type="<%= typ.toLowerCase() %>"
              data-status="<%= status.toLowerCase() %>"
              data-qty="<%= Number(d.quantity || 0) %>">

            <!-- Requester -->
            <td class="col-requester">
              <div class="val-business-name"><%= (d.requester && d.requester.businessName) || (business && business.name) || '‚Äî' %></div>
              <div>
                <span class="val-contact-name"><%= (d.requester && d.requester.contactName) || '‚Äî' %></span>
                <span class="sep">‚Äî</span>
                <span class="val-position"><%= (d.requester && d.requester.position) || '‚Äî' %></span>
              </div>
            </td>

            <!-- Type -->
            <td class="col-type"><span class="val-type"><%= typ || '‚Äî' %></span></td>

            <!-- Product -->
            <td class="col-product"><span class="val-product-name"><%= nm || '‚Äî' %></span></td>

            <!-- Quantity -->
            <td class="col-qty"><span class="val-quantity"><%= Number(d.quantity || 0) %></span></td>

            <!-- Location -->
            <td class="col-location">
              <% if (locParts.length) { %>
                <%= locParts.join(", ") %>
              <% } else { %>
                ‚Äî
              <% } %>
            </td>

            <!-- Notes -->
            <td class="col-notes">
              <span class="val-notes">
                <%= (d.notes || '').slice(0,120) %><%= (d.notes && d.notes.length > 120) ? '‚Ä¶' : '' %>
              </span>
            </td>

            <!-- Status -->
            <td class="col-status"><%= status %></td>

            <!-- Created -->
            <td class="col-created"><%= new Date(d.createdAt).toLocaleString() %></td>

            <!-- Actions -->
            <td class="col-actions">
              <!-- Use GET for reliability; your routes support GET /matches/run/:id -->
              <a class="btn btn-primary btn-find" 
                 href="/matches/run/<%= d._id %>" 
                 data-demand-id="<%= d._id %>">
                 Find Matches
              </a>

              <!-- Goes to buyer matches list filtered by this demand -->
              <a class="btn btn-secondary" href="/matches/buyer?demand=<%= d._id %>">View Matches</a>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  <% } else { %>
    <p>No demands yet.</p>
  <% } %>
</section>

<script nonce="<%= typeof nonce !== 'undefined' ? nonce : '' %>">
(function(){
  const $search = document.getElementById('searchName');
  const $type   = document.getElementById('filterType');
  const $status = document.getElementById('filterStatus');
  const $clear  = document.getElementById('clearFilters');

  const rows = Array.from(document.querySelectorAll('#tableMyDemands .row-demand'));

  const kpiReq  = document.getElementById('kpiTotalRequests');
  const kpiName = document.getElementById('kpiUniqueNames');
  const kpiQty  = document.getElementById('kpiTotalQty');

  // Build dropdowns from current rows
  const typeSet = new Set();
  const statusSet = new Set();
  rows.forEach(function(tr){
    const t = tr.dataset.type || '';
    const s = tr.dataset.status || '';
    if (t) typeSet.add(t);
    if (s) statusSet.add(s);
  });
  Array.from(typeSet).sort().forEach(function(t){
    const o = document.createElement('option');
    o.value = t; o.textContent = t.charAt(0).toUpperCase() + t.slice(1);
    $type.appendChild(o);
  });
  Array.from(statusSet).sort().forEach(function(s){
    const o = document.createElement('option');
    o.value = s; o.textContent = s.charAt(0).toUpperCase() + s.slice(1);
    $status.appendChild(o);
  });

  function recomputeKPIs(visibleRows){
    let totalReq = 0, totalQty = 0;
    const names = new Set();
    visibleRows.forEach(function(tr){
      totalReq += 1;
      totalQty += Number(tr.dataset.qty || 0);
      names.add((tr.dataset.name || '').trim());
    });
    if (kpiReq)  kpiReq.textContent  = String(totalReq);
    if (kpiQty)  kpiQty.textContent  = String(totalQty);
    if (kpiName) kpiName.textContent = String(names.size);
  }

  function applyFilters(){
    const q = ($search.value || '').trim().toLowerCase();
    const t = ($type.value   || '').trim().toLowerCase();
    const s = ($status.value || '').trim().toLowerCase();

    const visible = [];
    rows.forEach(function(tr){
      const name = tr.dataset.name || '';
      const typ  = tr.dataset.type || '';
      const st   = tr.dataset.status || '';
      const show = (!q || name.includes(q)) && (!t || typ === t) && (!s || st === s);
      tr.style.display = show ? '' : 'none';
      if (show) visible.push(tr);
    });
    recomputeKPIs(visible);
  }

  if ($search) $search.addEventListener('input', applyFilters);
  if ($type)   $type.addEventListener('change', applyFilters);
  if ($status) $status.addEventListener('change', applyFilters);
  if ($clear)  $clear.addEventListener('click', function(){
    if ($search) $search.value = '';
    if ($type)   $type.value   = '';
    if ($status) $status.value = '';
    applyFilters();
  });

  applyFilters();

  // Progressive enhancement:
  // Intercept Find Matches clicks to run matching, then navigate to the filtered matches list.
  document.querySelectorAll('.btn-find').forEach(function(a){
    a.addEventListener('click', function(ev){
      // Allow normal navigation if JS/CSP blocks fetch
      try {
        ev.preventDefault();
        const demandId = a.dataset.demandId;
        fetch(a.href, { method: 'GET', credentials: 'include' })
          .then(() => { window.location.href = `/matches/buyer?demand=${encodeURIComponent(demandId)}`; })
          .catch(() => { window.location.href = a.href; }); // fallback to server redirect
      } catch (_) {
        // fallback: follow link
        window.location.href = a.href;
      }
    });
  });
})();
</script>

<style>
  :root {
    --col-green:#16a34a; --col-blue:#2563eb; --col-navy:#1f2937; --col-purple:#7c3aed; --col-maroon:#7a1f2b;
    --col-violet:#6d28d9; --col-teal:#0f766e; --col-magenta:#be185d; --col-orange:#ea580c; --col-coral:#cc5533;
    --col-navyblue:#1e3a8a; --col-muted:#6b7280; --card-bg:#ffffff; --border:#e5e7eb;
    --kpi-bg-1:#f0fdf4; --kpi-bg-2:#fff7ed; --kpi-bg-3:#eef2ff; --kpi-fg-1:#166534; --kpi-fg-2:#9a3412; --kpi-fg-3:#4338ca;
  }
  body.dark-theme {
    --col-navy:#cbd5e1; --col-navyblue:#93c5fd;
    --kpi-bg-1:#052e16; --kpi-bg-2:#431407; --kpi-bg-3:#111827;
    --kpi-fg-1:#86efac; --kpi-fg-2:#fdba74; --kpi-fg-3:#a5b4fc;
    --card-bg:#111827; --border:#374151;
  }

  /* KPI */
  .kpi-grid {
    display:grid; gap:.8rem; grid-template-columns: repeat(3, minmax(0,1fr));
    margin:.5rem 0 1rem;
  }
  .kpi-card { padding:1rem; border:1px solid var(--border); border-radius:.75rem; background:var(--card-bg); box-shadow:0 1px 2px rgba(0,0,0,.04); }
  .kpi-grid .kpi-card:nth-child(1){ background:var(--kpi-bg-1); color:var(--kpi-fg-1); border:none; }
  .kpi-grid .kpi-card:nth-child(2){ background:var(--kpi-bg-2); color:var(--kpi-fg-2); border:none; }
  .kpi-grid .kpi-card:nth-child(3){ background:var(--kpi-bg-3); color:var(--kpi-fg-3); border:none; }
  .kpi-label{ font-size:.85rem; color:#6b7280; }
  .kpi-value{ font-size:1.35rem; font-weight:700; letter-spacing:.2px; }

  /* Filters */
  .filters {
    display:flex; gap:.6rem; align-items:center; margin:.6rem 0 1rem; flex-wrap:wrap;
  }
  .filters input[type="search"], .filters select {
    flex:1 1 220px; min-width:0; padding:.6rem .7rem; border:1px solid var(--border);
    border-radius:.55rem; box-shadow:0 1px 0 rgba(0,0,0,.04); background:var(--card-bg); color:inherit;
  }
  .btn{ padding:.6rem .85rem; border-radius:.55rem; border:0; cursor:pointer; }
  .btn-primary{ background:#2563eb; color:#fff; }
  .btn-secondary{ background:#f3f4f6; color:#111; }

  /* Table */
  .nice-table{
    width:100%; border-collapse:collapse; background:var(--card-bg);
    border-radius:.6rem; overflow:hidden; border:1px solid var(--border);
  }
  .nice-table th, .nice-table td{
    padding:.65rem .6rem; border-bottom:1px solid var(--border);
    text-align:left; vertical-align:top; white-space:normal;
  }
  .nice-table thead th{ background:#f9fafb; font-weight:600; }
  body.dark-theme .nice-table thead th{ background:#0b1220; }
  .nice-table tbody tr:hover{ background: rgba(37,99,235,.06); }
  body.dark-theme .nice-table tbody tr:hover{ background: rgba(59,130,246,.08); }

  .col-qty { text-align:right; font-variant-numeric: tabular-nums; }
  .col-actions{ white-space:nowrap; }

  /* Colored bits */
  .val-business-name{ color: var(--col-green); font-weight:700; }
  .val-contact-name{ color: var(--col-blue); font-weight:600; }
  .val-position{ color: var(--col-navy); }
  .val-product-name{ color: var(--col-purple); font-weight:600; }
  .val-type{ color: var(--col-maroon); font-weight:600; }
  .val-quantity{ color: var(--col-violet); font-variant-numeric: tabular-nums; }

  /* Mobile */
  @media (max-width:420px){
    .col-actions{ display:block; }
    .col-actions .btn{ width:100%; margin-top:.35rem; }
    .col-actions .btn:first-child{ margin-top:0; }
  }

  /* Mobile card mode */
  .nice-table{ overflow-x:auto; display:block; }
  @media (max-width:420px){
    .nice-table thead{ display:none; }
    .nice-table tbody tr{ display:block; padding:.7rem .7rem; border-bottom:1px solid var(--border); }
    .nice-table tbody tr:last-child{ border-bottom:none; }
    .nice-table td{
      display:flex; justify-content:space-between; align-items:flex-start;
      gap:.75rem; padding:.45rem 0; border-bottom:none; white-space:normal;
    }
    .nice-table td::before{
      content: attr(data-label);
      flex:0 0 auto; min-width:7.5rem; color: var(--col-muted); font-size:.85rem;
    }
    #tableMyDemands tbody tr td:nth-child(1)::before { content: "Requester"; }
    #tableMyDemands tbody tr td:nth-child(2)::before { content: "Type"; }
    #tableMyDemands tbody tr td:nth-child(3)::before { content: "Product"; }
    #tableMyDemands tbody tr td:nth-child(4)::before { content: "Qty"; }
    #tableMyDemands tbody tr td:nth-child(5)::before { content: "Location"; }
    #tableMyDemands tbody tr td:nth-child(6)::before { content: "Notes"; }
    #tableMyDemands tbody tr td:nth-child(7)::before { content: "Status"; }
    #tableMyDemands tbody tr td:nth-child(8)::before { content: "Created"; }
    #tableMyDemands tbody tr td:nth-child(9)::before { content: "Actions"; }
    .col-requester{ flex-direction:column; }
    .col-requester .val-business-name{ display:block; margin-bottom:2px; }
  }
</style>
