<%
  const NONCE = typeof nonce !== 'undefined' ? nonce : '';
  const THEME_CLASS = themeCss && themeCss.includes('dark') ? 'dark-theme' : 'light-theme';
%>

<% if (success && success.length > 0) { %>
  <div class="flash flash-success" role="status">‚úÖ <%= success %></div>
<% } %>
<% if (error && error.length > 0) { %>
  <div class="flash flash-error" role="alert">‚ùå <%= error %></div>
<% } %>

<main class="ty-page <%= THEME_CLASS %>">
  <header class="ty-head">
    <div class="ty-title">
      <h1>üéâ Thank you for your purchase!</h1>
      <p class="muted">
        We‚Äôve received your order
        <span id="tyOrderIdWrap" hidden>
          ‚Äî <strong id="tyOrderId">‚Äî</strong>
          <a id="viewOrderLink" class="inline-link" href="#" target="_blank" rel="noopener" hidden>View this order</a>
        </span>
      </p>
    </div>

    <nav class="btns" aria-label="Post-purchase actions">
  <a href="/sales" class="btn btn-primary" id="btnShop">‚Üê Continue shopping</a>
  <a id="btnReceipt" href="#" class="btn btn-light" hidden>View receipt</a>
  <a href="/payment/orders" class="btn btn-light">View my orders</a>
  <button id="btnPrint" class="btn btn-ghost" type="button" aria-label="Print receipt">üñ®Ô∏è Print</button>
</nav>
  </header>

  <section class="card" aria-labelledby="totalsTitle">
    <h2 id="totalsTitle" class="visually-hidden">Order totals</h2>
    <div id="totalsBox" class="totals">
      <div class="row"><span>Subtotal</span><span id="tSubtotal">‚Äî</span></div>
      <div class="row"><span>VAT</span><span id="tVat">‚Äî</span></div>
      <div class="row"><span id="tShipLabel">Delivery</span><span id="tShipping">‚Äî</span></div>
      <div class="row total"><span>Total</span><span id="tTotal">‚Äî</span></div>
    </div>

    <!-- Delivery snapshot -->
    <div id="deliveryBox" class="card-ghost" hidden>
      <h3>Delivery</h3>
      <div><strong>Method:</strong> <span id="delName">‚Äî</span></div>
      <div class="muted" id="delEta">‚Äî</div>
    </div>

    <!-- Meta snapshot -->
    <div id="metaBox" class="meta card-ghost" hidden>
      <h3>Order details</h3>
      <div class="meta-grid">
        <div><span class="label">Status</span><span id="ordStatus">‚Äî</span></div>
        <div><span class="label">Date</span><span id="ordDate">‚Äî</span></div>
        <div><span class="label">Paid</span><span id="ordPaid">‚Äî</span></div>
      </div>
    </div>
  </section>
</main>

<style nonce="<%= NONCE %>">
  :root{
    --bg:#fff; --text:#111827; --muted:#6b7280; --card:#fff; --border:#e5e7eb;
    --shadow:0 6px 18px rgba(0,0,0,.08); --brand:#111827; --brand-contrast:#fff;
    --radius:12px; --pad:12px; --tap:44px;
  }
  .dark-theme{
    --bg:#0b0b0b; --text:#f3f4f6; --muted:#9ca3af; --card:#141414; --border:#262626;
    --brand:#f3f4f6; --brand-contrast:#111;
  }
  html,body{background:var(--bg);color:var(--text);margin:0}
  .ty-page{max-width:680px;margin:0 auto;padding:12px}
  .ty-head{display:flex;flex-direction:column;gap:10px;margin:4px 0 12px}
  .ty-title h1{font-size:clamp(18px,6vw,28px);line-height:1.2;margin:0 0 4px}
  .muted{color:var(--muted)}
  .inline-link{margin-left:8px;font-size:.95em;text-decoration:underline}
  .btns{display:flex;flex-wrap:wrap;gap:8px}
  .btn{
    flex:1 1 100%; text-align:center; border:1px solid var(--brand); border-radius:10px;
    padding:10px 12px; min-height:var(--tap); line-height:1.1;
    text-decoration:none; cursor:pointer; font-size:clamp(14px,4.5vw,16px);
  }
  .btn-primary{background:var(--brand);color:var(--brand-contrast)}
  .btn-light{border-color:var(--border);background:var(--card);color:var(--text)}
  .btn-ghost{border-color:var(--border);background:transparent;color:var(--text)}
  .card{background:var(--card);border-radius:var(--radius);box-shadow:var(--shadow);padding:var(--pad)}
  .totals{display:grid;gap:6px;margin-top:.5rem}
  .row{display:flex;justify-content:space-between;font-size:clamp(14px,5vw,16px)}
  .row.total{font-weight:900;font-size:clamp(15px,5.4vw,18px);border-top:1px solid var(--border);padding-top:.5rem}
  .card-ghost{margin-top:1rem}
  .flash{margin:.6rem 0;padding:.6rem .8rem;border-radius:10px;font-size:clamp(14px,4.8vw,16px)}
  .flash-success{background:#ecfdf5;color:#065f46;border:1px solid #34d399}
  .flash-error{background:#fef2f2;color:#991b1b;border:1px solid #fca5a5}
  .visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px,1px,1px,1px);white-space:nowrap}

  .meta .meta-grid{
    display:grid;gap:8px;margin-top:6px;
    grid-template-columns:1fr;
    font-size:clamp(14px,4.8vw,16px);
  }
  .meta .label{opacity:.8;margin-right:8px;display:inline-block;min-width:64px}

  @media (min-width:420px){
    .btn{flex:0 0 auto; min-width:180px}
    .meta .meta-grid{grid-template-columns:repeat(3,1fr)}
  }

  @media print{
    .btns,.flash{display:none !important}
    .ty-page{max-width:100%;padding:0}
    body{background:#fff}
  }
</style>

<script nonce="<%= NONCE %>">
(function () {
  function qs(sel, ctx){ return (ctx||document).querySelector(sel); }
  function qsp(name){ var m = location.search.match(new RegExp('[?&]'+name+'=([^&]+)')); return m ? decodeURIComponent(m[1]) : ''; }
  function moneyFmt(currency){
    var C=(currency||'USD').toUpperCase();
    var sym={USD:'$',ZAR:'R',EUR:'‚Ç¨',GBP:'¬£'}[C]||(C+' ');
    return function(n){ return sym + Number(n||0).toFixed(2); };
  }
  function fetchJsonSafe(url){
    return fetch(url, { credentials:'same-origin' })
      .then(function(r){
        var ct = (r.headers.get('content-type') || '').toLowerCase();
        if (!r.ok) return { ok:false, status:r.status, json:null };
        if (!ct.includes('application/json')) return { ok:false, status:r.status, json:null };
        return r.json().then(function(j){ return { ok:true, status:r.status, json:j }; });
      })
      .catch(function(){ return { ok:false, status:0, json:null }; });
  }
  function tryOrderEndpoints(orderId){
    var path1 = '/payment/order/' + encodeURIComponent(orderId);
    var path2 = '/order/' + encodeURIComponent(orderId); // fallback if router mounted differently
    return fetchJsonSafe(path1).then(function(res1){
      if (res1.ok && res1.json && res1.json.success) return res1.json;
      return fetchJsonSafe(path2).then(function(res2){
        if (res2.ok && res2.json && res2.json.success) return res2.json;
        return null;
      });
    });
  }

  document.addEventListener('DOMContentLoaded', function(){
    var btnPrint = qs('#btnPrint');
    if (btnPrint) btnPrint.addEventListener('click', function(){ window.print(); });

    var orderId = qsp('id') || '';
    var tyWrap = qs('#tyOrderIdWrap');
    var tyId = qs('#tyOrderId');
    var viewLink = qs('#viewOrderLink');
    var btnReceipt = qs('#btnReceipt');

    if (orderId && tyWrap && tyId) {
      tyWrap.hidden = false;
      tyId.textContent = orderId;
      var recHref = '/payment/receipt/' + encodeURIComponent(orderId);
      if (viewLink)  { viewLink.href = recHref; viewLink.hidden = false; }
      if (btnReceipt){ btnReceipt.href = recHref; btnReceipt.hidden = false; }
    }

    // Load currency (fallback to USD)
    var currency = 'USD';
    fetch('/payment/config', { credentials:'same-origin' })
      .then(function(r){ return r.ok ? r.json() : {}; })
      .then(function(cfg){ currency = String(cfg.baseCurrency || cfg.currency || 'USD').toUpperCase(); })
      .catch(function(){});

    if (!orderId) return;

    // Hydrate: try /payment/order/:id then /order/:id
    tryOrderEndpoints(orderId)
      .then(function(payload){
        if (!payload) return; // leave placeholders; user still has receipt link
        var o = payload.order || {};
        var C = (o.currency || currency || 'USD').toUpperCase();
        var money = moneyFmt(C);

        // Meta snapshot
        var metaBox = qs('#metaBox');
        if (metaBox) {
          metaBox.hidden = false;
          var ordStatus = qs('#ordStatus');
          var ordDate   = qs('#ordDate');
          var ordPaid   = qs('#ordPaid');
          if (ordStatus) ordStatus.textContent = o.status || '‚Äî';
          if (ordDate)   ordDate.textContent   = o.createdAt ? new Date(o.createdAt).toLocaleString() : '‚Äî';
          if (ordPaid)   ordPaid.textContent   = (o.amount && o.amount.value != null) ? money(o.amount.value) : '‚Äî';
        }

        // Totals
        var tSub = qs('#tSubtotal');
        var tVat = qs('#tVat');
        var tShip= qs('#tShipping');
        var tTot = qs('#tTotal');
        if (tSub)  tSub.textContent  = (o.breakdown && o.breakdown.itemTotal) ? money(o.breakdown.itemTotal.value) : '‚Äî';
        if (tVat)  tVat.textContent  = (o.breakdown && o.breakdown.taxTotal)  ? money(o.breakdown.taxTotal.value)  : '‚Äî';
        if (tShip) tShip.textContent = (o.breakdown && o.breakdown.shipping)
                                        ? money(o.breakdown.shipping.value)
                                        : (o.delivery && o.delivery.amount != null ? money(o.delivery.amount) : '‚Äî');
        if (tTot)  tTot.textContent  = (o.amount && o.amount.value != null)   ? money(o.amount.value)              : '‚Äî';

        // Delivery box
        if (o.delivery && (o.delivery.name || (o.delivery.deliveryDays != null))) {
          var dBox = qs('#deliveryBox');
          var dName= qs('#delName');
          var dEta = qs('#delEta');
          if (dBox) dBox.hidden = false;
          if (dName) dName.textContent = o.delivery.name || 'Selected method';
          if (dEta)  dEta.textContent  = (o.delivery.deliveryDays != null)
              ? ('Estimated delivery: ' + o.delivery.deliveryDays + ' day' + (o.delivery.deliveryDays === 1 ? '' : 's'))
              : 'Estimated delivery: ‚Äî';
        }
      })
      .catch(function(e){
        console.warn('thank-you hydrate failed', e);
      });
  });
})();
</script>
