<!-- views/matches/matched-demands.ejs -->
<link rel="stylesheet" href="<%= themeCss %>">

<section class="dashboard-home">
  <h1 class="page-title">üì® Buyer Demands Matched to Your Products</h1>

  <% if (error && error.length) { %>
    <div class="flash flash-error">‚ùå <%= error %></div>
  <% } %>
  <% if (success && success.length) { %>
    <div class="flash flash-success">‚úÖ <%= success %></div>
  <% } %>

  <div class="toolbar">
    <input id="q" class="input" type="search" placeholder="Search (demand/product/buyer/location)‚Ä¶" />
    <select id="status" class="input">
      <option value="">All statuses</option>
      <option value="pending">Pending</option>
      <option value="accepted">Accepted</option>
      <option value="rejected">Rejected</option>
    </select>
  </div>

  <% if (matches && matches.length) { %>
    <table class="nice-table" id="tblSupplierMatches">
      <thead>
        <tr>
          <th>Demand</th>
          <th>Product</th>
          <th>Buyer</th>
          <th>Price</th>
          <th>Location</th>
          <th>Score</th>
          <th>Status</th>
          <th style="width:240px;">Respond</th>
        </tr>
      </thead>
      <tbody>
        <% matches.forEach(function(m){ 
          const d  = m.demandId || {};
          const p  = m.productId || {};
          const b  = m.buyerId   || {};
          const ss = m.snapshot  || {};

          const demandTitle = d.title || d.productName || d.type || ss.demandTitle || "Demand";
          const productName = p.name  || ss.productName || "‚Äî";
          const productType = p.type  || ss.productType || "‚Äî";
          const buyerName   = b.name  || b.businessName || "‚Äî";
          const price = (typeof p.price !== "undefined") ? p.price : ss.productPrice;
          const loc   = p.location || ss.productLocation || d.location || ss.demandLocation ||
                        [p.country, p.province, p.city, p.town].filter(Boolean).join(", ") || "‚Äî";
          const status = (m.status || "pending").toLowerCase();

          const rowSearch = [demandTitle, productName, productType, buyerName, loc].join(" ").toLowerCase();
        %>
        <tr class="row" data-search="<%= rowSearch %>" data-status="<%= status %>">
          <td>
            <div class="title"><%= demandTitle %></div>
            <div class="muted">Type: <span class="tag"><%= productType %></span> ‚Ä¢ Qty: <%= d.quantity || ss.demandQuantity || "‚Äî" %></div>
          </td>
          <td>
            <div class="title"><%= productName %></div>
            <div class="muted">#<%= String(m.productId?._id || m.productId || "").slice(-6) %></div>
          </td>
          <td><%= buyerName %></td>
          <td class="num"><%= (typeof price === "number") ? price.toFixed(2) : (price || "‚Äî") %></td>
          <td><%= loc %></td>
          <td class="num"><%= Number(m.score || 0) %></td>
          <td>
            <span class="badge <%= status %>"><%= status.charAt(0).toUpperCase() + status.slice(1) %></span>
          </td>
          <td>
            <form method="post" action="/matches/<%= m._id %>/respond" class="respond-form">
              <input type="hidden" name="action" value="accepted" />
              <div class="row-actions">
                <button type="submit" class="btn btn-accept">Accept</button>
                <button type="button" class="btn btn-reject" data-id="<%= m._id %>">Reject</button>
              </div>
              <textarea name="message" placeholder="Optional message to buyer‚Ä¶" rows="2" class="input msg"></textarea>
            </form>
            <!-- Reject form (hidden) -->
            <form method="post" action="/matches/<%= m._id %>/respond" class="reject-form" style="display:none;">
              <input type="hidden" name="action" value="rejected" />
              <textarea name="message" placeholder="Reason (optional)..." rows="2" class="input msg"></textarea>
              <div class="row-actions">
                <button type="submit" class="btn btn-yes">Confirm reject</button>
                <button type="button" class="btn btn-cancel" data-id="<%= m._id %>">Cancel</button>
              </div>
            </form>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  <% } else { %>
    <div class="empty">
      <p>No matched demands yet.</p>
    </div>
  <% } %>
</section>

<script nonce="<%= nonce %>">
(function(){
  const $q = document.getElementById('q');
  const $st = document.getElementById('status');
  const rows = Array.from(document.querySelectorAll('#tblSupplierMatches tbody .row'));

  function apply(){
    const q = ($q?.value || '').trim().toLowerCase();
    const s = ($st?.value || '').trim().toLowerCase();
    rows.forEach(tr => {
      const matchQ = tr.dataset.search || '';
      const st = (tr.dataset.status || '').toLowerCase();
      const show = (!q || matchQ.includes(q)) && (!s || st === s);
      tr.style.display = show ? '' : 'none';
    });
  }
  $q?.addEventListener('input', apply);
  $st?.addEventListener('change', apply);
  apply();

  // Accept/Reject toggling
  document.querySelectorAll('.btn-reject').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.id;
      const row = btn.closest('td');
      row.querySelector('.respond-form').style.display = 'none';
      row.querySelector('.reject-form').style.display = '';
    });
  });
  document.querySelectorAll('.btn-cancel').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.id;
      const row = btn.closest('td');
      row.querySelector('.reject-form').style.display = 'none';
      row.querySelector('.respond-form').style.display = '';
    });
  });
})();
</script>

<style>
  :root { --border:#e5e7eb; --card:#fff; --muted:#6b7280; --ink:#111827; --row-hover: rgba(37,99,235,.06);
          --primary:#2563eb; --green:#16a34a; --red:#ef4444; --amber:#f59e0b; }
  body.dark-theme { --card:#111827; --border:#374151; --ink:#e5e7eb; --muted:#94a3b8; --row-hover: rgba(59,130,246,.08); }

  .toolbar{ display:flex; gap:.6rem; align-items:center; margin:.7rem 0; flex-wrap:wrap; }
  .input{ padding:.55rem .7rem; border:1px solid var(--border); border-radius:.55rem; background:var(--card); color:inherit; min-width:180px; }
  .btn{ padding:.45rem .7rem; border-radius:.5rem; border:0; cursor:pointer; }
  .btn-accept{ background:var(--green); color:#fff; }
  .btn-reject{ background:#f3f4f6; color:#111; }
  .btn-yes{ background:var(--red); color:#fff; }
  .btn-cancel{ background:#f3f4f6; color:#111; }

  .nice-table{ width:100%; border-collapse:collapse; background:var(--card); border:1px solid var(--border); border-radius:.6rem; overflow:hidden; }
  .nice-table th, .nice-table td{ padding:.65rem .6rem; border-bottom:1px solid var(--border); vertical-align:top; }
  .nice-table thead th{ background:#f9fafb; font-weight:600; }
  body.dark-theme .nice-table thead th{ background:#0b1220; }
  .nice-table tbody tr:hover{ background:var(--row-hover); }

  .title{ font-weight:700; }
  .muted{ color:var(--muted); }
  .badge{ padding:.2rem .5rem; border-radius:.5rem; font-size:.8rem; font-weight:600; text-transform:capitalize; }
  .badge.pending{ background:#fff7ed; color:#9a3412; }
  .badge.accepted{ background:#ecfdf5; color:#065f46; }
  .badge.rejected{ background:#fef2f2; color:#991b1b; }
  body.dark-theme .badge.pending{ background:#431407; color:#fdba74; }
  body.dark-theme .badge.accepted{ background:#052e16; color:#86efac; }
  body.dark-theme .badge.rejected{ background:#3f1d1d; color:#fca5a5; }

  .row-actions{ display:flex; gap:.4rem; margin-bottom:.35rem; }
  .msg{ width:100%; resize:vertical; }
  
  /* Mobile card mode */
  .nice-table{ display:block; overflow-x:auto; }
  @media (max-width:420px){
    .toolbar .input{ flex:1 1 100%; min-width:0; }
    .nice-table thead{ display:none; }
    .nice-table tbody tr{ display:block; padding:.7rem; border-bottom:1px solid var(--border); }
    .nice-table tbody tr:last-child{ border-bottom:none; }
    .nice-table td{ display:flex; justify-content:space-between; gap:.75rem; padding:.45rem 0; border-bottom:none; }
    .nice-table td::before{ content: attr(data-label); flex:0 0 auto; min-width:7.2rem; color:var(--muted); font-size:.85rem; }
  }
</style>
