<!-- ✅ Phakisi Global Navbar -->
<nav class="navbar <%= themeCss.includes('dark') ? 'dark-theme' : 'light-theme' %>">
  <div class="nav-container">
    <!-- 🌍 Brand -->
    <div class="nav-left">
      <a href="/" class="brand">🌍 Phakisi Global</a>
    </div>

    <!-- 🧭 Core links (always visible, includes Shop) -->
    <div class="nav-core">
      <a href="/users/about" class="<%= active === 'about' ? 'active' : '' %>">About</a>

      <!-- 🔔 Notifications (added) -->
      <a href="/notifications" class="nav-bell" title="Notifications">
        🔔
        <% if (typeof notificationsUnread !== 'undefined' && notificationsUnread > 0) { %>
          <span class="bell-badge"><%= notificationsUnread %></span>
        <% } %>
      </a>

      <a href="/sales" class="<%= active === 'shop' ? 'active' : '' %> highlight-link">🛒 Shop</a>
      <!--<a href="/contact" class="<%= active === 'contact' ? 'active' : '' %> highlight-link">Contact</a>-->
    </div>

    <!-- 🍔 Hamburger (drawer trigger) -->
    <button class="nav-toggle" id="navToggle" aria-label="Toggle navigation">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
  </div>

  <!-- 🌫 Overlay background -->
  <div class="nav-overlay" id="navOverlay"></div>

  <!-- 📋 Drawer Menu -->
  <div class="nav-links" id="navLinks">
    <button class="drawer-close" id="drawerClose" aria-label="Close menu">✖</button>

    <% if (business) { %>
      <span class="welcome">Hi, <%= business.name %> 👋</span>
      <a href="/business/dashboard">Dashboard</a>
      <a href="/business/profile">Profile</a>
      <a href="/products">Products</a>
      <a href="/products/add">Add Product</a>
      <a href="/shipments">Shipments</a>
      <a href="/admin/messages">Messages</a>
      <a href="/demands/add">➕ Add Demand</a>                  <!-- ✅ -->
      <a href="/demands/aggregate">📊 Demanded Products</a>    <!-- ✅ -->
      <a href="/demands/mine">📋 My Demands</a> 
      <a href="/" class="<%= active === 'home' ? 'active' : '' %>">Home</a>               <!-- (optional quick link) -->
      <form action="/business/logout" method="POST" class="inline-form">
        <button type="submit" class="btn-logout">Logout</button>
      </form>

    <% } else if (user) { %>
      <span class="welcome">Hi, <%= user.name %> 👋</span>
      <a href="/users/dashboard">Dashboard</a>
      <a href="/users/profile">Profile</a>
      <a href="/" class="<%= active === 'home' ? 'active' : '' %>">Home</a>
      <form action="/users/logout" method="GET" class="inline-form">
        <button type="submit" class="btn-logout">Logout</button>
      </form>

    <% } else { %>
      <span class="welcome highlight-link">Guest 👤</span>
      <a href="/users/login" class="highlight-link">User Login</a>
      <a href="/users/signup" class="highlight-link">User Sign Up</a>
      <a href="/business/login" class="highlight-link">Business Login</a>
      <a href="/business/signup" class="highlight-link">Business Sign Up</a>
       <a href="/" class="<%= active === 'home' ? 'active' : '' %>">Home</a>
    <% } %>

    <form id="themeToggleForm" method="POST" action="/theme-toggle">
      <button type="submit" class="btn-theme">
        <%= themeCss.includes('dark') ? '🌞 Light Mode' : '🌙 Dark Mode' %>
      </button>
    </form>
  </div>
</nav>

<!-- 💅 Styles -->
<style>
.navbar {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1000;
  background: var(--nav-bg, #ffffff);
  color: var(--nav-text, #111827);
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  transition: background 0.3s, color 0.3s;
}
.dark-theme.navbar { --nav-bg: #111827; --nav-text: #f9fafb; }

.nav-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.6rem 1.2rem;
  max-width: 1200px;
  margin: 0 auto;
}
.brand {
  font-weight: 700;
  font-size: 1.2rem;
  color: var(--nav-text);
  text-decoration: none;
}

/* 🌐 Core links */
.nav-core {
  display: flex;
  gap: 0.8rem;
  align-items: center;
}
.nav-core a {
  color: var(--nav-text);
  text-decoration: none;
  font-weight: 500;
  padding: 0.4rem 0.6rem;
  border-radius: 6px;
  transition: background 0.2s;
}
.nav-core a:hover,
.nav-core .active {
  background: rgba(0,0,0,0.08);
}
.dark-theme .nav-core a:hover,
.dark-theme .nav-core .active {
  background: rgba(255,255,255,0.1);
}

/* ✨ Highlighted links */
.highlight-link {
  font-weight: 600;
  color: #2563eb;
}
.highlight-link:hover {
  color: #1e40af;
  background: rgba(37,99,235,0.1);
}
.dark-theme .highlight-link { color: #93c5fd; }
.dark-theme .highlight-link:hover {
  color: #60a5fa;
  background: rgba(59,130,246,0.15);
}

/* 🍔 Hamburger */
.nav-toggle {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 26px;
  height: 20px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
}
.nav-toggle .bar {
  height: 3px;
  width: 100%;
  background: var(--nav-text);
  border-radius: 3px;
  transition: 0.3s ease;
}

/* 🌫 Overlay */
.nav-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.4);
  opacity: 0; visibility: hidden;
  transition: opacity 0.4s ease;
  z-index: 900;
}
.nav-overlay.show { opacity: 1; visibility: visible; }

/* 📋 Drawer */
.nav-links {
  position: fixed;
  top: 0; right: -80%;
  width: 70%;
  height: 100%;
  background: var(--nav-bg);
  display: flex; flex-direction: column;
  gap: 0.8rem;
  padding: 4rem 1.5rem 2rem;
  box-shadow: -4px 0 10px rgba(0,0,0,0.1);
  transition: right 0.4s ease;
  z-index: 1000;
}
.nav-links.open { right: 0; }

.drawer-close {
  position: absolute;
  top: 12px;
  right: 16px;
  background: none;
  border: none;
  font-size: 1.5rem;
  color: var(--nav-text);
  cursor: pointer;
}
.drawer-close:hover { color: #2563eb; transform: rotate(90deg); }

.welcome { font-weight: 500; opacity: 0.9; }

.btn-logout, .btn-theme {
  padding: 0.6rem 1rem;
  border: none; border-radius: 6px;
  cursor: pointer; color: #fff;
  font-weight: 600;
  transition: background 0.3s;
}
.btn-logout { background: #dc2626; }
.btn-logout:hover { background: #b91c1c; }
.btn-theme { background: #2563eb; }
.btn-theme:hover { background: #1d4ed8; }

/* ✅ Keep core visible on all screens */
@media (max-width: 768px) {
  .nav-core { display: flex; flex-wrap: wrap; gap: 0.6rem; }
}

/* 🔔 Notifications badge (non-intrusive) */
.nav-core .nav-bell { position: relative; display:inline-flex; align-items:center; gap:6px; }
.nav-core .nav-bell .bell-badge{
  position:absolute; top:-6px; right:-8px;
  min-width:18px; height:18px; padding:0 4px;
  display:inline-flex; align-items:center; justify-content:center;
  background:#ef4444; color:#fff; border-radius:999px;
  font-size:12px; font-weight:700; line-height:1;
  box-shadow: 0 1px 2px rgba(0,0,0,0.15);
}
.dark-theme .nav-core .nav-bell .bell-badge{ box-shadow: 0 1px 2px rgba(255,255,255,0.1); }
</style>

<!-- ⚙️ Script -->
<script nonce="<%= nonce %>">
document.addEventListener("DOMContentLoaded", () => {
  const toggle = document.getElementById("navToggle");
  const links = document.getElementById("navLinks");
  const overlay = document.getElementById("navOverlay");
  const bars = toggle.querySelectorAll(".bar");
  const drawerClose = document.getElementById("drawerClose");

  const openMenu = () => {
    links.classList.add("open");
    overlay.classList.add("show");
    toggle.classList.add("active");
    bars.forEach((bar, i) => {
      if (i === 0) bar.style.transform = "rotate(45deg) translateY(8px)";
      else if (i === 1) bar.style.transform = "scale(0)";
      else if (i === 2) bar.style.transform = "rotate(-45deg) translateY(-8px)";
    });
  };

  const closeMenu = () => {
    links.classList.remove("open");
    overlay.classList.remove("show");
    toggle.classList.remove("active");
    bars.forEach(bar => (bar.style.transform = "none"));
  };

  toggle.addEventListener("click", () => {
    if (links.classList.contains("open")) closeMenu();
    else openMenu();
  });
  overlay.addEventListener("click", closeMenu);
  drawerClose.addEventListener("click", closeMenu);
});
</script>

<script nonce="<%= nonce %>">
(function poll(){
  fetch('/notifications/unread-count', { credentials: 'same-origin' })
    .then(r => r.ok ? r.json() : { count: 0 })
    .then(({ count }) => {
      const anchor = document.querySelector('.nav-core .nav-bell');
      if (!anchor) return;
      let badge = anchor.querySelector('.bell-badge');
      if (count > 0) {
        if (!badge) {
          badge = document.createElement('span');
          badge.className = 'bell-badge';
          badge.textContent = count;
          anchor.appendChild(badge);
        } else {
          badge.textContent = count;
        }
      } else if (badge) {
        badge.remove();
      }
    })
    .catch(()=>{})
    .finally(() => setTimeout(poll, 15000));
})();
</script>
